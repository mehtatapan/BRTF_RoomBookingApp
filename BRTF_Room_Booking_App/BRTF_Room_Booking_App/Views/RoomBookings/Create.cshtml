@model BRTF_Room_Booking_App.Models.RoomBooking

@{ ViewData["Title"] = "Create Booking"; }
<body style="background-color:#E4E6E6" class="align-items-center text-center justify-content-center">
    <br />
    <h1 class="mb-4">Book a Room</h1>
    <br />

    <section style="background-color: #FFF;display: block; border-radius: 8px; box-shadow: 0 15px 25px rgba(0,0,50,0.2);" class="px-5 py-2 my-3">

        @if (TempData["TimeConflictedBookings"] != null)
        {
            @:<br />
            @:<div class="alert alert-danger text-left">
                @:<b>Time conflict:</b> Your Booking times overlap with the following existing Bookings.<br /><br />
                @:<table style='width:87%;'>
                    @:<tr>
                        @:<th></th>
                        @:<th colspan='3'>Your Bookings</th>
                        @:<th colspan='4'>Existing Bookings</th>
                    @:</tr>
                    @:<tr>
                        @:<th>Room</th>
                        @:<th>Date</th>
                        @:<th>Start Time</th>
                        @:<th>End Time</th>
                        @:<th>Date</th>
                        @:<th>Start Time</th>
                        @:<th>End Time</th>
                        @:<th>Booked For</th>
                    @:</tr>

                    List<RoomBooking> yourBookings = TempData["YourBookings"] as List<RoomBooking>;
                    List<RoomBooking> conflictBookings = TempData["TimeConflictedBookings"] as List<RoomBooking>;
                    int yourBookingsCount = yourBookings.Count;

                    string previousRoomName = yourBookings[0].Room.RoomName;  // Used to bold text where the room name changes

                    for (int i = 0; i < yourBookingsCount; i++)
                    {
                        if (yourBookings[i].Room.RoomName != previousRoomName)
                        {
                            @:<tr><td>&nbsp;</td></tr>
                            previousRoomName = yourBookings[i].Room.RoomName;
                        }
                        @:<tr>
                            @:<td>@(Html.Raw(yourBookings[i].Room.RoomName))</td>
                            @:<td>@(Html.Raw(yourBookings[i].StartDate.ToShortDateString()))</td>
                            @:<td>@(Html.Raw(yourBookings[i].StartDate.ToShortTimeString()))</td>
                            @:<td>@(Html.Raw(yourBookings[i].EndDate.ToShortTimeString()))</td>
                            if (conflictBookings[i] != null)
                            {
                                @:<td>@(Html.Raw(conflictBookings[i].StartDate.ToShortDateString()))</td>
                                @:<td>@(Html.Raw(conflictBookings[i].StartDate.ToShortTimeString()))</td>
                                @:<td>@(Html.Raw(conflictBookings[i].EndDate.ToShortTimeString()))</td>
                                @:<td>@(Html.Raw(conflictBookings[i].User.FullName))</td>
                            }
                            else
                            {
                                @:<td></td>
                                @:<td colspan='3'>(no conflict)</td>
                            }
                        @:</tr>
                    }
                @:</table><br />
                @:Please adjust your Booking times.
            @:</div>
            @:<br />
        }

        @if (TempData["AreaHoursViolation"] != null)
        {
            @:<br />
            @:<div class="alert alert-danger text-left">
                @:<b>Maximum Area hours violation:</b> Your new Booking exceeds the maximum hours you are allowed to book for these Areas.<br /><br />
                @:<table style='width:90%;'>
                    @:<tr>
                        @:<th>Area</th>
                        @:<th>Your Existing Hours</th>
                        @:<th>Hours Added By New Booking</th>
                        @:<th>Your New Total</th>
                        @:<th>Max Allowed Total</th>
                        @:<th></th>
                    @:</tr>

                    List<IDictionary<string, string>> hourViolations = TempData["AreaHoursViolation"] as List<IDictionary<string, string>>;
                    int hourViolationsCount = hourViolations.Count;

                    for (int i = 0; i < hourViolationsCount; i++)
                    {
                        @:<tr>
                            @:<td>@(Html.Raw(hourViolations[i]["AreaName"]))</td>
                            @:<td>@(Html.Raw(hourViolations[i]["ExistingHoursForArea"]))</td>
                            @:<td>@(Html.Raw(hourViolations[i]["NewHoursForArea"]))</td>
                            @:<td>@(Html.Raw(hourViolations[i]["NewTotalHoursForArea"]))</td>
                            @:<td>@(Html.Raw(hourViolations[i]["MaxHoursForArea"]))</td>
                            if (Convert.ToInt32(hourViolations[i]["NewTotalHoursForArea"]) > Convert.ToInt32(hourViolations[i]["MaxHoursForArea"]))
                            {
                                @:<td><b>Exceeds Max</b></td>
                            }
                        @:</tr>
                    }
                @:</table><br />
                @:Please adjust your Booking times.
            @:</div>
            @:<br />
        }

        @if (TempData["RoomHoursViolation"] != null)
        {
            @:<br />
            @:<div class="alert alert-danger text-left">
                @:<b>Maximum Room hours violation:</b> Your new Booking exceeds the maximum hours you are allowed to book for these Rooms.<br /><br />
                @:<table style='width:90%;'>
                    @:<tr>
                        @:<th>Room</th>
                        @:<th>Your Existing Hours</th>
                        @:<th>Hours Added By New Booking</th>
                        @:<th>Your New Total</th>
                        @:<th>Max Allowed Total</th>
                        @:<th></th>
                    @:</tr>

                    List<IDictionary<string, string>> hourViolations = TempData["RoomHoursViolation"] as List<IDictionary<string, string>>;
                    int hourViolationsCount = hourViolations.Count;

                    for (int i = 0; i < hourViolationsCount; i++)
                    {
                        @:<tr>
                            @:<td>@(Html.Raw(hourViolations[i]["RoomName"]))</td>
                            @:<td>@(Html.Raw(hourViolations[i]["ExistingHoursForRoom"]))</td>
                            @:<td>@(Html.Raw(hourViolations[i]["NewHoursForRoom"]))</td>
                            @:<td>@(Html.Raw(hourViolations[i]["NewTotalHoursForRoom"]))</td>
                            @:<td>@(Html.Raw(hourViolations[i]["MaxHoursForRoom"]))</td>
                            if (Convert.ToInt32(hourViolations[i]["NewTotalHoursForRoom"]) > Convert.ToInt32(hourViolations[i]["MaxHoursForRoom"]))
                            {
                                @:<td><b>Exceeds Max</b></td>
                            }
                        @:</tr>
                    }
                @:</table><br />
                @:Please adjust your Booking times.
            @:</div>
            @:<br />
        }

        @if (TempData["SingleBookingLengthViolation"] != null)
        {
            @:<br />
            @:<div class="alert alert-danger text-left">
                @:<b>Booking length violation:</b> Your new Booking exceeds the maximum allowed uninterrupted time for single Bookings in these Rooms.<br /><br />
                @:<table style='width:90%;'>
                    @:<tr>
                        @:<th>Room</th>
                        @:<th>Booking Date</th>
                        @:<th>Time</th>
                        @:<th>Booking Length (Hours)</th>
                        @:<th>Max Length (Hours)</th>
                        @:<th></th>
                    @:</tr>

                    List<IDictionary<string, string>> hourViolations = TempData["SingleBookingLengthViolation"] as List<IDictionary<string, string>>;
                    int hourViolationsCount = hourViolations.Count;

                    string previousRoomName = hourViolations[0]["RoomName"];  // Used to bold text where the room name changes

                    for (int i = 0; i < hourViolationsCount; i++)
                    {
                        if (hourViolations[i]["RoomName"] != previousRoomName)
                        {
                            @:<tr><td>&nbsp;</td></tr>
                            previousRoomName = hourViolations[i]["RoomName"];
                        }
                        @:<tr>
                            @:<td>@(Html.Raw(hourViolations[i]["RoomName"]))</td>
                            @:<td>@(Html.Raw(hourViolations[i]["BookingDate"]))</td>
                            @:<td>@(Html.Raw(hourViolations[i]["BookingTime"]))</td>
                            @:<td>@(Html.Raw(hourViolations[i]["HoursBooked"]))</td>
                            @:<td>@(Html.Raw(hourViolations[i]["MaxHoursSingleBooking"]))</td>
                            if (Convert.ToInt32(hourViolations[i]["HoursBooked"]) > Convert.ToInt32(hourViolations[i]["MaxHoursSingleBooking"]))
                            {
                                @:<td><b>Exceeds Max</b></td>
                            }
                        @:</tr>
                    }
                @:</table><br />
                @:Please adjust your Booking times.
            @:</div>
            @:<br />
        }

        @if (TempData["AreaBookingCountViolation"] != null)
        {
            @:<br />
            @:<div class="alert alert-danger text-left">
                @:<b>Maximum Booking count violation:</b> Your new Booking exceeds the maximum number of separate Bookings you are allowed to have for these Areas.<br /><br />
                @:<table style='width:90%;'>
                    @:<tr>
                        @:<th>Area</th>
                        @:<th>Existing Bookings Count</th>
                        @:<th>Count of New Bookings</th>
                        @:<th>Your New Total</th>
                        @:<th>Max Allowed Total</th>
                        @:<th></th>
                    @:</tr>

                    List<IDictionary<string, string>> bookingViolations = TempData["AreaBookingCountViolation"] as List<IDictionary<string, string>>;
                    int bookingViolationsCount = bookingViolations.Count;

                    for (int i = 0; i < bookingViolationsCount; i++)
                    {
                        @:<tr>
                            @:<td>@(Html.Raw(bookingViolations[i]["AreaName"]))</td>
                            @:<td>@(Html.Raw(bookingViolations[i]["ExistingBookingsForArea"]))</td>
                            @:<td>@(Html.Raw(bookingViolations[i]["NewBookingsForArea"]))</td>
                            @:<td>@(Html.Raw(bookingViolations[i]["NewTotalBookingsForArea"]))</td>
                            @:<td>@(Html.Raw(bookingViolations[i]["MaxBookingsForArea"]))</td>
                            if (Convert.ToInt32(bookingViolations[i]["NewTotalBookingsForArea"]) > Convert.ToInt32(bookingViolations[i]["MaxBookingsForArea"]))
                            {
                                @:<td><b>Exceeds Max</b></td>
                            }
                        @:</tr>
                    }
                @:</table><br />
                @:Please adjust your Booking settings.
            @:</div>
            @:<br />
        }

        <div>
            <br />
            <h4>Create New Booking</h4>
            <br />
        </div>
        <div>
            <div class="container">
                <form asp-action="Create">
                    <div class="row form-group">
                        <div class="col-2 text-right pt-2">
                            <label asp-for="UserID" class="control-label"><strong>Full Name: *</strong></label>
                        </div>
                        <div class="col-10">
                            <select asp-for="UserID" class="form-control" asp-items="ViewBag.UserID" disabled="@(ViewBag.UserIdDisabled)"></select>
                            <span asp-validation-for="UserID" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-2 text-right pt-2">
                            <label asp-for="SpecialNotes" class="control-label"><strong>Special Notes:</strong></label>
                        </div>
                        <div class="col-10">
                            <textarea asp-for="SpecialNotes" class="form-control"></textarea>
                            <span asp-validation-for="SpecialNotes" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-2 text-right pt-2">
                            <label asp-for="StartDate" class="control-label"><strong>Start: *</strong></label>
                        </div>
                        <div class="col-5">
                            <input textmode="DateTime" asp-for="StartDate" class="form-control" />
                            <span asp-validation-for="StartDate" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row form-group">
                        <div class="col-2 text-right pt-2">
                            <label asp-for="EndDate" class="control-label"><strong>End: *</strong></label>
                        </div>
                        <div class="col-5">
                            <input textmode="DateTime" asp-for="EndDate" class="form-control" />
                            <span asp-validation-for="EndDate" class="text-danger"></span>
                        </div>
                    </div>
                    <br />
                    <div class="row form-group">
                        <div class="col-1 text-right" style="padding:0px">
                            <button type="button" title="Room Selection Help" class="btn btn-sm" data-container="body" data-toggle="popover" data-placement="left" data-content="To add a Room to your Booking, first select the Area. You will then be able to select the desired Room in that Area from the Dropdown below.">
                                <img src="~/img/questionmark.png" width="30" height="30" />
                            </button>
                        </div>
                        <div class="col-11 text-left" style="padding-top:5px">
                            <h5>Select a Room: </h5>
                        </div>
                    </div>

                    <div class="row form-group">
                        <div class="col-2 text-right pt-2">
                            <label for="RoomGroupID" class="label"><strong>Area: *</strong></label>
                        </div>
                        <div class="col-10">
                            <select id="RoomGroupID" name="RoomGroupID" class="form-control" asp-items="ViewBag.RoomGroupID"></select>
                        </div>
                    </div>
                    @if (User.IsInRole("User"))
                    {
                        <div class="row form-group">
                            <div class="col-2 text-right pt-2">
                                <label asp-for="RoomID" class="label"><strong>Room: *</strong></label>
                            </div>
                            <div class="col-10">
                                <select asp-for="RoomID" class="form-control" asp-items="ViewBag.RoomID">
                                    <option value="">-Select a Room-</option>
                                </select>
                                <span asp-validation-for="RoomID" class="text-danger"></span>
                            </div>
                        </div>
                    }
                    <!-- Once Identity is implemented, only show this section if the user is an Admin -->
                    @if (User.IsInRole("Admin") || User.IsInRole("Top-level Admin"))
                    {
                        <div class="row form-group">
                            <div class="col-md-6">
                                <label for="selectedOptions" class="control-label"><strong>Current Rooms to Book</strong></label> <button type="button" title="Remove Rooms from Booking" id="btnRight" class="btn btn-danger btn-sm">
                                    <strong>➖</strong>
                                </button>
                                @Html.ListBox("selectedOptions", (MultiSelectList)ViewBag.selOpts, new { @size = 10, @class = "form-control", @style = "height: 90%;" })
                                <span asp-validation-for="RoomID" class="text-danger"></span>
                            </div>
                            <div class="col-md-6">
                                <label for="availOptions" class="control-label"><strong>Add Rooms to Booking</strong></label> <button type="button" title="Add Rooms to Booking" id="btnLeft" class="btn btn-success btn-sm">
                                    <strong>➕</strong>
                                </button>
                                @Html.ListBox("availOptions", (MultiSelectList)ViewBag.availOpts, new { @size = 10, @class = "form-control", @style = "height: 90%;" })
                            </div>
                        </div>
                    }
                    <br />
                    <div class="row form-group">
                        <div class="col-1 text-right" style="padding:0px">
                            <button type="button" title="Repeating Bookings Help" class="btn btn-sm" data-container="body" data-toggle="popover" data-placement="left" data-content="If you want your Booking to be repeated regularly, click this checkbox. You can then select how frequently you would like the Booking to occur. You may choose to repeat bookings every x Days or Weeks until your chosen Repeat End Date, and specify the days of the week on which it should be booked.">
                                <img src="~/img/questionmark.png" width="30" height="30" />
                            </button>
                        </div>
                        <div class="col-11 text-left" style="padding-top:5px">
                            <label for="chkRepeat" class="control-label" style="font-size: 1.25rem; font-weight: 500;"><strong>Repeat?</strong></label>
                            <input type="checkbox" id="chkRepeat" name="chkRepeat" class="control-label" @Html.Raw(ViewBag.chkRepeat) data-toggle="collapse" data-target="#collapseRepeat" aria-expanded="false" aria-controls="collapseRepeat" />
                        </div>
                    </div>
                    <div class="collapse @(ViewData["RepeatContainer"])" id="collapseRepeat">
                        <div class="container">
                            <div class="row">
                                <div class="col-2 text-right">
                                    <label for="RepeatInterval" class="control-label"><strong>Every:</strong></label>
                                </div>
                                <div class="col-5">
                                    <input type="number" id="RepeatInterval" name="RepeatInterval" step="1" min="1" value="@(ViewData["RepeatInterval"])" class="form-control" />
                                    <span class="text-danger field-validation-valid" data-valmsg-for="RepeatInterval" data-valmsg-replace="true"></span>
                                </div>
                                <div class="col-5">
                                    <select id="RepeatType" name="RepeatType" class="form-control" asp-items="ViewBag.RepeatType"></select>
                                </div>
                            </div>
                            <div class="container mt-3">
                                <div class="row">
                                    <div class="col">
                                        <input type="checkbox" id="Monday" name="Monday" @Html.Raw(ViewBag.Monday) style="width: 20px; height: 20px;" />
                                    </div>
                                    <div class="col">
                                        <input type="checkbox" id="Tuesday" name="Tuesday" @Html.Raw(ViewBag.Tuesday) style="width: 20px; height: 20px;" />
                                    </div>
                                    <div class="col">
                                        <input type="checkbox" id="Wednesday" name="Wednesday" @Html.Raw(ViewBag.Wednesday) style="width: 20px; height: 20px; " />
                                    </div>
                                    <div class="col">
                                        <input type="checkbox" id="Thursday" name="Thursday" @Html.Raw(ViewBag.Thursday) style="width: 20px; height: 20px; " />
                                    </div>
                                    <div class="col">
                                        <input type="checkbox" id="Friday" name="Friday" @Html.Raw(ViewBag.Friday) style="width: 20px; height: 20px; " />
                                    </div>
                                    <div class="col">
                                        <input type="checkbox" id="Saturday" name="Saturday" @Html.Raw(ViewBag.Saturday) style="width: 20px; height: 20px; " />
                                    </div>
                                    <div class="col">
                                        <input type="checkbox" id="Sunday" name="Sunday" @Html.Raw(ViewBag.Sunday) style="width: 20px; height: 20px; " />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col">
                                        <label for="Monday" class="control-label">Mon</label>
                                    </div>
                                    <div class="col">
                                        <label for="Tuesday" class="control-label">Tue</label>
                                    </div>
                                    <div class="col">
                                        <label for="Wednesday" class="control-label">Wed</label>
                                    </div>
                                    <div class="col">
                                        <label for="Thursday" class="control-label">Thu</label>
                                    </div>
                                    <div class="col">
                                        <label for="Friday" class="control-label">Fri</label>
                                    </div>
                                    <div class="col">
                                        <label for="Saturday" class="control-label">Sat</label>
                                    </div>
                                    <div class="col">
                                        <label for="Sunday" class="control-label">Sun</label>
                                    </div>
                                </div>
                            </div>
                            <div class="container">
                                <div class="row">
                                    <div class="col-2 text-right pt-2">
                                        <label for="RepeatEndDate" class="control-label"><strong>Repeat End Date:</strong></label>
                                    </div>
                                    <div class="col-5">
                                        <input type="date" id="RepeatEndDate" name="RepeatEndDate" value="@(ViewData["RepeatEndDate"])" class="form-control" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    <br />
                    <div>
                        <input type="submit" value="Create" class="btn btn-primary mx-2" style="width:100px;" />
                        <a href='@ViewData["returnURL"]' role="button" class="btn btn-secondary mx-2">Back to Bookings</a>
                    </div>
                    <br />
                </form>
            </div>
        </div>
    </section>
</body>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/multiselect.js"></script>
    <script src="~/js/refreshListbox.js"></script>
    <script src="~/js/refreshDDL.js"></script>
    <script type="text/javascript">
        // Refresh DDL of available rooms when Area is changed
        $('#RoomGroupID').change(function () {
            var selectedRoomGroup = $("#RoomGroupID").val();
            var URL = "/RoomBookings/GetRooms/" + selectedRoomGroup;
            refreshDDL('RoomID', URL, true, "There are no Rooms available in this Area.", true, "-Select a Room-", true);
        });
    </script>
    <script tye="text/javascript">
        $(function () {
            $('[data-toggle="popover"]').popover()
        })
    </script>
    <script type="text/javascript">
        // Refresh Listbox of available rooms when Area is changed
        $('#RoomGroupID').change(function () {
            var selectedRoomGroup = $("#RoomGroupID").val();
            var URL = "/RoomBookings/GetRooms/" + selectedRoomGroup;
            $("#selectedOptions").empty();  // Empty previously selected rooms because the area changed
            refreshListbox('availOptions', URL, true, 'There are no Rooms available in this Area.', true);
        });
    </script>
}
